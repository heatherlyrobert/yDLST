#!/usr/local/bin/koios
#   koios-polos (north star) -- customized c unit testing meta-program and mini-language
#   program under test  : khronos_tabs
#   auto-generated script file converted from a previous script version
#   updated to the most recent version (v21)



#23456789-12  123  123456789-123456789-123456789-12345  123456789-123456789-123456  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  -  123456789-123456789- 
#==(verb)===  ver  ===========(description)===========  =====(function)===========  ========================(arguments)=================================================================  ==(test)==  ==========================(results)=================================================================  t  ========(var)======= 
PREP          v21  include the prototype headers                                      - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
   incl       v21  include public header                yDLST.h                     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
   incl       v21  include private header               yDLST_priv.h                - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  



#23456789-12  123  123456789-123456789-123456789-12345  123456789-123456789-123456  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  -  123456789-123456789- 
#==(verb)===  ver  ===========(description)===========  =====(function)===========  ========================(arguments)=================================================================  ==(test)==  ==========================(results)=================================================================  t  ========(var)======= 
SCRP          v21  (LIST  ) verify user checking                                      tabs_check_user                                                                                       ((01.---))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  


##======  ===========================(purpose)============================== 
#PREP     include the prototype headers                                      
#  incl   include main header                    yDLST.h                   
#  incl   include private header                 yDLST_priv.h              
#
#
#
##==(verb)===  ===========(short desc)============  =====(function)=====  ========================(arguments)=========================  ==========  ==========================(results)========================= 
#SCRP          list creation and destruction        yDLST_create,destroy                                                                                                                                           
#
#   COND       setup library                                                                                                                                                                                         
#     exec     setup the library                    yDLST_begin                                                                         i_equal     0                                                            
#
#   COND       setup working variables                                                                                                                                                                               
#     code     list 1 id                            int    x_id1   = -1;                                                                                                                                             
#     code     list 2 id                            int    x_id2   = -1;                                                                                                                                             
#     code     list 3 id                            int    x_id3   = -1;                                                                                                                                             
#     code     list 4 id                            int    x_id4   = -1;                                                                                                                                             
#     code     list 5 id                            int    x_id5   = -1;                                                                                                                                             
#     code     create a custom expect string        char custom[2000];                                                                                                                                               
#
#   COND       verify blank slate to start                                                                                                                                                                           
#     get      review the list counts               yDLST_greybox         "list_count",    0                                            s_equal     LIST Counts      : n=   0, f=   0, b=   0                    
#     code     create a custom expect string        sprintf(custom, "LIST End Ints    : n=   0, h=%4d, t=%4d",  -1  ,  -1  );                                                                                        
#     get      verify the list of lists             yDLST_greybox         "list_end_int" , 0                                            c_equal     custom                                                       
#
#   COND       create and verify a new list                                                                                                                                                                          
#     exec     setup the linked list                yDLST_create          &x_id1, "empties", NULL                                       i_equal     0                                                            
#     get      review the list counts               yDLST_greybox         "list_count",    0                                            s_equal     LIST Counts      : n=   1, f=   1, b=   1                    
#     code     create a custom expect string        sprintf(custom, "LIST End Ints    : n=   1, h=%4d, t=%4d", x_id1, x_id1);                                                                                        
#     get      verify the list of lists             yDLST_greybox         "list_end_int" , 0                                            c_equal     custom                                                       
#
#   COND       create and verify a second list                                                                                                                                                                       
#     exec     setup the linked list                yDLST_create          &x_id2, "more so", NULL                                       i_equal     0                                                            
#     get      review the list counts               yDLST_greybox         "list_count",    0                                            s_equal     LIST Counts      : n=   2, f=   2, b=   2                    
#     code     create a custom expect string        sprintf(custom, "LIST End Ints    : n=   2, h=%4d, t=%4d", x_id1, x_id2);                                                                                        
#     get      verify the list of lists             yDLST_greybox         "list_end_int" , 0                                            c_equal     custom                                                       
#
#   COND       create and verify a third list                                                                                                                                                                        
#     exec     setup the linked list                yDLST_create          &x_id3, "and again", NULL                                     i_equal     0                                                            
#     get      review the list counts               yDLST_greybox         "list_count",    0                                            s_equal     LIST Counts      : n=   3, f=   3, b=   3                    
#     code     create a custom expect string        sprintf(custom, "LIST End Ints    : n=   3, h=%4d, t=%4d", x_id1, x_id3);                                                                                        
#     get      verify the list of lists             yDLST_greybox         "list_end_int" , 0                                            c_equal     custom                                                       
#
#   COND       run through list of lists                                                                                                                                                                             
#     exec     get the head                         yDLST_lists           HEAD                                                          p_not       NULL                                                         
#     exec     get next                             yDLST_lists           NEXT                                                          p_not       NULL                                                         
#     exec     get next                             yDLST_lists           NEXT                                                          p_not       NULL                                                         
#     exec     get next                             yDLST_lists           NEXT                                                          p_equal     NULL                                                         
#     exec     get next, past end again (bad)       yDLST_lists           NEXT                                                          p_equal     NULL                                                         
#
#   COND       try to setup with a null id pointer                                                                                                                                                                   
#     exec     setup the linked list                yDLST_create          NULL  , "bad pointer", NULL                                   i_not       0                                                            
#     get      review the list counts               yDLST_greybox         "list_count",    0                                            s_equal     LIST Counts      : n=   3, f=   3, b=   3                    
#     code     create a custom expect string        sprintf(custom, "LIST End Ints    : n=   3, h=%4d, t=%4d", x_id1, x_id3);                                                                                        
#     get      verify the list of lists             yDLST_greybox         "list_end_int" , 0                                            c_equal     custom                                                       
#
#   COND       try to setup with a null name                                                                                                                                                                         
#     exec     setup the linked list                yDLST_create          &x_id4, NULL         , NULL                                   i_not       0                                                            
#     get      review the list counts               yDLST_greybox         "list_count",    0                                            s_equal     LIST Counts      : n=   3, f=   3, b=   3                    
#     code     create a custom expect string        sprintf(custom, "LIST End Ints    : n=   3, h=%4d, t=%4d", x_id1, x_id3);                                                                                        
#     get      verify the list of lists             yDLST_greybox         "list_end_int" , 0                                            c_equal     custom                                                       
#
#   COND       remove and verify the second list                                                                                                                                                                     
#     exec     remove the list                      yDLST_destroy         x_id2                                                         i_equal     0                                                            
#     get      review the list counts               yDLST_greybox         "list_count",    0                                            s_equal     LIST Counts      : n=   2, f=   2, b=   2                    
#     code     create a custom expect string        sprintf(custom, "LIST End Ints    : n=   2, h=%4d, t=%4d", x_id1, x_id3);                                                                                        
#     get      verify the list of lists             yDLST_greybox         "list_end_int" , 0                                            c_equal     custom                                                       
#
#   COND       attempt to remove a non-existant list (too large)                                                                                                                                                     
#     exec     remove the list                      yDLST_destroy         20                                                            i_not       0                                                            
#     get      review the list counts               yDLST_greybox         "list_count",    0                                            s_equal     LIST Counts      : n=   2, f=   2, b=   2                    
#     code     create a custom expect string        sprintf(custom, "LIST End Ints    : n=   2, h=%4d, t=%4d", x_id1, x_id3);                                                                                        
#     get      verify the list of lists             yDLST_greybox         "list_end_int" , 0                                            c_equal     custom                                                       
#
#   COND       attempt to remove a non-existant list (negative)                                                                                                                                                      
#     exec     remove the list                      yDLST_destroy         -5                                                            i_not       0                                                            
#     get      review the list counts               yDLST_greybox         "list_count",    0                                            s_equal     LIST Counts      : n=   2, f=   2, b=   2                    
#     code     create a custom expect string        sprintf(custom, "LIST End Ints    : n=   2, h=%4d, t=%4d", x_id1, x_id3);                                                                                        
#     get      verify the list of lists             yDLST_greybox         "list_end_int" , 0                                            c_equal     custom                                                       
#
#   COND       remove and verify the first list                                                                                                                                                                      
#     exec     remove the list                      yDLST_destroy         x_id1                                                         i_equal     0                                                            
#     get      review the list counts               yDLST_greybox         "list_count",    0                                            s_equal     LIST Counts      : n=   1, f=   1, b=   1                    
#     code     create a custom expect string        sprintf(custom, "LIST End Ints    : n=   1, h=%4d, t=%4d", x_id3, x_id3);                                                                                        
#     get      verify the list of lists             yDLST_greybox         "list_end_int" , 0                                            c_equal     custom                                                       
#
#   COND       create and verify a fourth list                                                                                                                                                                       
#     exec     setup the linked list                yDLST_create          &x_id4, "more so", NULL                                       i_equal     0                                                            
#     get      review the list counts               yDLST_greybox         "list_count",    0                                            s_equal     LIST Counts      : n=   2, f=   2, b=   2                    
#     code     create a custom expect string        sprintf(custom, "LIST End Ints    : n=   2, h=%4d, t=%4d", x_id3, x_id4);                                                                                        
#     get      verify the list of lists             yDLST_greybox         "list_end_int" , 0                                            c_equal     custom                                                       
#
#   COND       create and verify a fifth list                                                                                                                                                                        
#     exec     setup the linked list                yDLST_create          &x_id5, "and again", NULL                                     i_equal     0                                                            
#     get      review the list counts               yDLST_greybox         "list_count",    0                                            s_equal     LIST Counts      : n=   3, f=   3, b=   3                    
#     code     create a custom expect string        sprintf(custom, "LIST End Ints    : n=   3, h=%4d, t=%4d", x_id3, x_id5);                                                                                        
#     get      verify the list of lists             yDLST_greybox         "list_end_int" , 0                                            c_equal     custom                                                       
#
#   COND       teardown library (should destroy all lists)                                                                                                                                                           
#     exec     wrapup the library                   yDLST_end                                                                           i_equal     0                                                            
#     code     create a custom expect string        sprintf(custom, "LIST End Ints    : n=   0, h=%4d, t=%4d",  -1  ,  -1  );                                                                                        
#     get      verify the list of lists             yDLST_greybox         "list_end_int" , 0                                            c_equal     custom                                                       
#
#
##==(verb)===  ===========(short desc)============  =====(function)=====  ========================(arguments)=========================  ==========  ==========================(results)========================= 
#SCRP          link creation and destruction        yDLST_new , _free                                                                                                                                              
#
#   COND       setup library                                                                                                                                                                                         
#     exec     setup the library                    yDLST_begin                                                                         i_equal     0                                                            
#
#   COND       setup list pointer                                                                                                                                                                                    
#     code     create a list pointer                int    x_list = 0;                                                                                                                                               
#
#   COND       setup link pointers                                                                                                                                                                                   
#     code     create a custom expect string        char custom[2000];                                                                                                                                               
#     code     create a pointer to the first dep    int   x_head = 0;                                                                                                                                                
#     code     create a pointer to the first dep    int   x_next = 0;                                                                                                                                                
#     code     create a pointer to a mid-point      int   x_save = 0;                                                                                                                                                
#     code     create a pointer to one after that   int   x_plus = 0;                                                                                                                                                
#     code     create a pointer to the last dep     int   x_tail = 0;                                                                                                                                                
#
#   COND       setup data payloads                                                                                                                                                                                   
#     code     create a payload                     char *x_pay  = "payload for head";                                                                                                                               
#
#   COND       verify a blank slate to start                                                                                                                                                                         
#     get      review the list counts               yDLST_greybox         "list_count",    0                                            s_equal     LIST Counts      : n=   0, f=   0, b=   0                    
#     code     create a custom expect string        sprintf(custom, "LIST End Ints    : n=   0, h=%4d, t=%4d",  -1  ,  -1  );                                                                                        
#     get      verify the list of lists             yDLST_greybox         "list_end_int" , 0                                            c_equal     custom                                                       
#     get      review the count of all links        yDLST_greybox         "all_count",     0                                            s_equal     ALL Counts       : n=   0, f=   0, b=   0                    
#     code     create a custom expect string        sprintf(custom, "ALL End Ints     : n=   0, h=%4d, t=%4d",  -1  ,  -1  );                                                                                        
#     get      verify the list of all links         yDLST_greybox         "all_end_int"  , 0                                            c_equal     custom                                                       
#
#   COND       add and verify a empty new list                                                                                                                                                                       
#     exec     setup the linked list                yDLST_create          &x_list, "", NULL                                             i_equal     0                                                            
#     get      review the list counts               yDLST_greybox         "list_count",    0                                            s_equal     LIST Counts      : n=   1, f=   1, b=   1                    
#     code     create a custom expect string        sprintf(custom, "LIST End Ints    : n=   1, h=%4d, t=%4d", x_list, x_list);                                                                                      
#     get      verify the list of lists             yDLST_greybox         "list_end_int",  0                                            c_equal     custom                                                       
#     get      review the count of all links        yDLST_greybox         "all_count",     0                                            s_equal     ALL Counts       : n=   0, f=   0, b=   0                    
#     code     create a custom expect string        sprintf(custom, "ALL End Ints     : n=   0, h=%4d, t=%4d",  -1   ,  -1   );                                                                                      
#     get      verify the list of all links         yDLST_greybox         "all_end_int" ,  0                                            c_equal     custom                                                       
#
#   COND       add a first link                                                                                                                                                                                      
#     exec     add a link                           yDLST_new             x_list, &x_head, NULL, x_pay                                  i_equal     0                                                            
#     get      verify the lists link counts         yDLST_greybox         "link_count",    x_list                                       s_equal     LINK Counts      : n=   1, f=   1, b=   1                    
#     code     create a custom expect string        sprintf(custom, "LINK End Ints    : n=   1, h=%4d, t=%4d", x_head, x_head);                                                                                      
#     get      verify the list of links             yDLST_greybox         "link_end_int",  x_list                                       c_equal     custom                                                       
#     get      review the count of all links        yDLST_greybox         "all_count",     0                                            s_equal     ALL Counts       : n=   1, f=   1, b=   1                    
#     code     create a custom expect string        sprintf(custom, "ALL End Ints     : n=   1, h=%4d, t=%4d", x_head, x_head);                                                                                      
#     get      verify the list of all links         yDLST_greybox         "all_end_int",   0                                            c_equal     custom                                                       
#
#   COND       delete the first link                                                                                                                                                                                 
#     exec     remove the link                      yDLST_free            x_head                                                        i_equal     0                                                            
#     get      verify the lists link counts         yDLST_greybox         "link_count",    x_list                                       s_equal     LINK Counts      : n=   0, f=   0, b=   0                    
#     code     create a custom expect string        sprintf(custom, "LINK End Ints    : n=   0, h=%4d, t=%4d",  -1   ,  -1   );                                                                                      
#     get      verify the list of links             yDLST_greybox         "link_end_int",  x_list                                       c_equal     custom                                                       
#     get      review the count of all links        yDLST_greybox         "all_count",     0                                            s_equal     ALL Counts       : n=   0, f=   0, b=   0                    
#     code     create a custom expect string        sprintf(custom, "ALL End Ints     : n=   0, h=%4d, t=%4d",  -1   ,  -1   );                                                                                      
#     get      verify the list of all links         yDLST_greybox         "all_end_int",   0                                            c_equal     custom                                                       
#
#   COND       add the first, again                                                                                                                                                                                  
#     exec     add a link                           yDLST_new             x_list, &x_head, NULL, x_pay                                  i_equal     0                                                            
#     get      verify the lists link counts         yDLST_greybox         "link_count",    x_list                                       s_equal     LINK Counts      : n=   1, f=   1, b=   1                    
#     code     create a custom expect string        sprintf(custom, "LINK End Ints    : n=   1, h=%4d, t=%4d", x_head, x_head);                                                                                      
#     get      verify the list of links             yDLST_greybox         "link_end_int",  x_list                                       c_equal     custom                                                       
#     get      review the count of all links        yDLST_greybox         "all_count",     0                                            s_equal     ALL Counts       : n=   1, f=   1, b=   1                    
#     code     create a custom expect string        sprintf(custom, "ALL End Ints     : n=   1, h=%4d, t=%4d", x_head, x_head);                                                                                      
#     get      verify the list of all links         yDLST_greybox         "all_end_int",   0                                            c_equal     custom                                                       
#
#   COND       add four more to get a reasonable list                                                                                                                                                                
#     exec     add a link, save the second          yDLST_new             x_list, &x_next, NULL, x_pay                                  i_equal     0                                                            
#     exec     add a link, save this middle         yDLST_new             x_list, &x_save, NULL, x_pay                                  i_equal     0                                                            
#     exec     add a link, save next to tail        yDLST_new             x_list, &x_plus, NULL, x_pay                                  i_equal     0                                                            
#     exec     add a link, save tail                yDLST_new             x_list, &x_tail, NULL, x_pay                                  i_equal     0                                                            
#     get      verify the lists link counts         yDLST_greybox         "link_count",    x_list                                       s_equal     LINK Counts      : n=   5, f=   5, b=   5                    
#     code     create a custom expect string        sprintf(custom, "LINK End Ints    : n=   5, h=%4d, t=%4d", x_head, x_tail);                                                                                      
#     get      verify the list of links             yDLST_greybox         "link_end_int",  x_list                                       c_equal     custom                                                       
#     get      review the count of all links        yDLST_greybox         "all_count",     0                                            s_equal     ALL Counts       : n=   5, f=   5, b=   5                    
#     code     create a custom expect string        sprintf(custom, "ALL End Ints     : n=   5, h=%4d, t=%4d", x_head, x_tail);                                                                                      
#     get      verify the list of all links         yDLST_greybox         "all_end_int",   0                                            c_equal     custom                                                       
#
#   COND       delete one near the end (easy enough)                                                                                                                                                                 
#     exec     remove the link                      yDLST_free            x_plus                                                        i_equal     0                                                            
#     get      verify the lists link counts         yDLST_greybox         "link_count",    x_list                                       s_equal     LINK Counts      : n=   4, f=   4, b=   4                    
#     code     create a custom expect string        sprintf(custom, "LINK End Ints    : n=   4, h=%4d, t=%4d", x_head, x_tail);                                                                                      
#     get      verify the list of links             yDLST_greybox         "link_end_int",  x_list                                       c_equal     custom                                                       
#     get      review the count of all links        yDLST_greybox         "all_count",     0                                            s_equal     ALL Counts       : n=   4, f=   4, b=   4                    
#     code     create a custom expect string        sprintf(custom, "ALL End Ints     : n=   4, h=%4d, t=%4d", x_head, x_tail);                                                                                      
#     get      verify the list of all links         yDLST_greybox         "all_end_int",   0                                            c_equal     custom                                                       
#
#   COND       delete the tail (more problematic)                                                                                                                                                                    
#     exec     remove the link                      yDLST_free            x_tail                                                        i_equal     0                                                            
#     get      verify the lists link counts         yDLST_greybox         "link_count",    x_list                                       s_equal     LINK Counts      : n=   3, f=   3, b=   3                    
#     code     create a custom expect string        sprintf(custom, "LINK End Ints    : n=   3, h=%4d, t=%4d", x_head, x_save);                                                                                      
#     get      verify the list of links             yDLST_greybox         "link_end_int",  x_list                                       c_equal     custom                                                       
#     get      review the count of all links        yDLST_greybox         "all_count",     0                                            s_equal     ALL Counts       : n=   3, f=   3, b=   3                    
#     code     create a custom expect string        sprintf(custom, "ALL End Ints     : n=   3, h=%4d, t=%4d", x_head, x_save);                                                                                      
#     get      verify the list of all links         yDLST_greybox         "all_end_int",   0                                            c_equal     custom                                                       
#
#   COND       delete the head (painful)                                                                                                                                                                             
#     exec     remove the link                      yDLST_free            x_head                                                        i_equal     0                                                            
#     get      verify the lists link counts         yDLST_greybox         "link_count",    x_list                                       s_equal     LINK Counts      : n=   2, f=   2, b=   2                    
#     code     create a custom expect string        sprintf(custom, "LINK End Ints    : n=   2, h=%4d, t=%4d", x_next, x_save);                                                                                      
#     get      verify the list of links             yDLST_greybox         "link_end_int",  x_list                                       c_equal     custom                                                       
#     get      review the count of all links        yDLST_greybox         "all_count",     0                                            s_equal     ALL Counts       : n=   2, f=   2, b=   2                    
#     code     create a custom expect string        sprintf(custom, "ALL End Ints     : n=   2, h=%4d, t=%4d", x_next, x_save);                                                                                      
#     get      verify the list of all links         yDLST_greybox         "all_end_int",   0                                            c_equal     custom                                                       
#
#   COND       add four more after                                                                                                                                                                                   
#     exec     add a link, use a null               yDLST_new             x_list, NULL   , NULL, x_pay                                  i_equal     0                                                            
#     exec     add a link, use a null               yDLST_new             x_list, NULL   , NULL, x_pay                                  i_equal     0                                                            
#     exec     add a link, use a null               yDLST_new             x_list, NULL   , NULL, x_pay                                  i_equal     0                                                            
#     exec     add a link, save this to tail        yDLST_new             x_list, &x_tail, NULL, x_pay                                  i_equal     0                                                            
#     get      verify the lists link counts         yDLST_greybox         "link_count",    x_list                                       s_equal     LINK Counts      : n=   6, f=   6, b=   6                    
#     code     create a custom expect string        sprintf(custom, "LINK End Ints    : n=   6, h=%4d, t=%4d", x_next, x_tail);                                                                                      
#     get      verify the list of links             yDLST_greybox         "link_end_int",  x_list                                       c_equal     custom                                                       
#     get      review the count of all links        yDLST_greybox         "all_count",     0                                            s_equal     ALL Counts       : n=   6, f=   6, b=   6                    
#     code     create a custom expect string        sprintf(custom, "ALL End Ints     : n=   6, h=%4d, t=%4d", x_next, x_tail);                                                                                      
#     get      verify the list of all links         yDLST_greybox         "all_end_int",   0                                            c_equal     custom                                                       
#
#   COND       purge the list                                                                                                                                                                                        
#     exec     remove all links                     yDLST_purge           x_list                                                        i_equal     0                                                            
#     get      verify the lists link counts         yDLST_greybox         "link_count",    x_list                                       s_equal     LINK Counts      : n=   0, f=   0, b=   0                    
#     code     create a custom expect string        sprintf(custom, "LINK End Ints    : n=   0, h=%4d, t=%4d",  -1   ,  -1   );                                                                                      
#     get      verify the list of links             yDLST_greybox         "link_end_int",  x_list                                       c_equal     custom                                                       
#     get      review the count of all links        yDLST_greybox         "all_count",     0                                            s_equal     ALL Counts       : n=   0, f=   0, b=   0                    
#     code     create a custom expect string        sprintf(custom, "ALL End Ints     : n=   0, h=%4d, t=%4d",  -1   ,  -1   );                                                                                      
#     get      verify the list of all links         yDLST_greybox         "all_end_int",   0                                            c_equal     custom                                                       
#
#   COND       add one again                                                                                                                                                                                         
#     exec     add a link                           yDLST_new             x_list, &x_head, NULL, x_pay                                  i_equal     0                                                            
#     get      verify the lists link counts         yDLST_greybox         "link_count",    x_list                                       s_equal     LINK Counts      : n=   1, f=   1, b=   1                    
#     code     create a custom expect string        sprintf(custom, "LINK End Ints    : n=   1, h=%4d, t=%4d", x_head, x_head);                                                                                      
#     get      verify the list of links             yDLST_greybox         "link_end_int",  x_list                                       c_equal     custom                                                       
#     get      review the count of all links        yDLST_greybox         "all_count",     0                                            s_equal     ALL Counts       : n=   1, f=   1, b=   1                    
#     code     create a custom expect string        sprintf(custom, "ALL End Ints     : n=   1, h=%4d, t=%4d", x_head, x_head);                                                                                      
#     get      verify the list of all links         yDLST_greybox         "all_end_int",   0                                            c_equal     custom                                                       
#
#   COND       delete the head                                                                                                                                                                                       
#     exec     remove the link                      yDLST_free            x_head                                                        i_equal     0                                                            
#     get      verify the lists link counts         yDLST_greybox         "link_count",    x_list                                       s_equal     LINK Counts      : n=   0, f=   0, b=   0                    
#     code     create a custom expect string        sprintf(custom, "LINK End Ints    : n=   0, h=%4d, t=%4d",  -1   ,  -1   );                                                                                      
#     get      verify the list of links             yDLST_greybox         "link_end_int",  x_list                                       c_equal     custom                                                       
#     get      review the count of all links        yDLST_greybox         "all_count",     0                                            s_equal     ALL Counts       : n=   0, f=   0, b=   0                    
#     code     create a custom expect string        sprintf(custom, "ALL End Ints     : n=   0, h=%4d, t=%4d",  -1   ,  -1   );                                                                                      
#     get      verify the list of all links         yDLST_greybox         "all_end_int",   0                                            c_equal     custom                                                       
#
#   COND       delete an already deleted link                                                                                                                                                                        
#     exec     remove the link                      yDLST_free            x_head                                                        i_not       0                                                            
#     get      verify the lists link counts         yDLST_greybox         "link_count",    x_list                                       s_equal     LINK Counts      : n=   0, f=   0, b=   0                    
#     code     create a custom expect string        sprintf(custom, "LINK End Ints    : n=   0, h=%4d, t=%4d",  -1   ,  -1   );                                                                                      
#     get      verify the list of links             yDLST_greybox         "link_end_int",  x_list                                       c_equal     custom                                                       
#     get      review the count of all links        yDLST_greybox         "all_count",     0                                            s_equal     ALL Counts       : n=   0, f=   0, b=   0                    
#     code     create a custom expect string        sprintf(custom, "ALL End Ints     : n=   0, h=%4d, t=%4d",  -1   ,  -1   );                                                                                      
#     get      verify the list of all links         yDLST_greybox         "all_end_int",   0                                            c_equal     custom                                                       
#
#   COND       purge the list when empty                                                                                                                                                                             
#     exec     remove all links                     yDLST_purge           x_list                                                        i_equal     0                                                            
#     get      verify the lists link counts         yDLST_greybox         "link_count",    x_list                                       s_equal     LINK Counts      : n=   0, f=   0, b=   0                    
#     code     create a custom expect string        sprintf(custom, "LINK End Ints    : n=   0, h=%4d, t=%4d",  -1   ,  -1   );                                                                                      
#     get      verify the list of links             yDLST_greybox         "link_end_int",  x_list                                       c_equal     custom                                                       
#     get      review the count of all links        yDLST_greybox         "all_count",     0                                            s_equal     ALL Counts       : n=   0, f=   0, b=   0                    
#     code     create a custom expect string        sprintf(custom, "ALL End Ints     : n=   0, h=%4d, t=%4d",  -1   ,  -1   );                                                                                      
#     get      verify the list of all links         yDLST_greybox         "all_end_int",   0                                            c_equal     custom                                                       
#
#   COND       teardown library (should destroy all lists/links)                                                                                                                                                     
#     exec     wrapup the library                   yDLST_end                                                                           i_equal     0                                                            
#     get      review the list counts               yDLST_greybox         "list_count",    0                                            s_equal     LIST Counts      : n=   0, f=   0, b=   0                    
#     code     create a custom expect string        sprintf(custom, "LIST End Ints    : n=   0, h=%4d, t=%4d",  -1  ,  -1  );                                                                                        
#     get      verify the list of lists             yDLST_greybox         "list_end_int" , 0                                            c_equal     custom                                                       
#     get      review the count of all links        yDLST_greybox         "all_count",     0                                            s_equal     ALL Counts       : n=   0, f=   0, b=   0                    
#     code     create a custom expect string        sprintf(custom, "ALL End Ints     : n=   0, h=%4d, t=%4d",  -1  ,  -1  );                                                                                        
#     get      verify the list of all links         yDLST_greybox         "all_end_int"  , 0                                            c_equal     custom                                                       
#
#
#
##==(verb)===  ===========(short desc)============  =====(function)=====  ========================(arguments)=========================  ==========  ==========================(results)========================= 
#SCRP          multiple lists                       yDLST_create,destroy                                                                                                                                           
#
#   COND       setup library                                                                                                                                                                                         
#     exec     setup the library                    yDLST_begin                                                                         i_equal     0                                                            
#
#   COND       setup list pointers                                                                                                                                                                                   
#     code     create a list pointer                int    x_list1 = 0;                                                                                                                                              
#     code     create a list pointer                int    x_list2 = 0;                                                                                                                                              
#     code     create a list pointer                int    x_list3 = 0;                                                                                                                                              
#
#   COND       setup link pointers                                                                                                                                                                                   
#     code     create a custom expect string        char custom[2000];                                                                                                                                               
#     code     create a pointer to the first dep    int   x_head = 0;                                                                                                                                                
#     code     create a pointer to a mid-point      int   x_save = 0;                                                                                                                                                
#     code     create a pointer to one after that   int   x_more = 0;                                                                                                                                                
#     code     create a pointer to the last dep     int   x_tail = 0;                                                                                                                                                
#     code     create a pointer for temp            int   x_temp = 0;                                                                                                                                                
#
#   COND       setup data payloads                                                                                                                                                                                   
#     code     create a payload                     char *x_pay1 = "payload for one";                                                                                                                               
#     code     create a payload                     void *x_pay2 = "payload for two";                                                                                                                               
#     code     create a payload                     void *x_pay3 = "payload for three";                                                                                                                               
#     code     create a payload                     void *x_pay4 = "payload for four";                                                                                                                               
#     code     create a payload                     char *x_pay5 = "payload for five";                                                                                                                               
#     code     create a payload                     void *x_pay6 = "payload for six";                                                                                                                               
#
#   COND       verify a blank slate to start                                                                                                                                                                         
#     get      review the list counts               yDLST_greybox         "list_count",    0                                            s_equal     LIST Counts      : n=   0, f=   0, b=   0                    
#     code     create a custom expect string        sprintf(custom, "LIST End Ints    : n=   0, h=%4d, t=%4d",  -1  ,  -1  );                                                                                        
#     get      verify the list of lists             yDLST_greybox         "list_end_int" , 0                                            c_equal     custom                                                       
#     get      review the count of all links        yDLST_greybox         "all_count",     0                                            s_equal     ALL Counts       : n=   0, f=   0, b=   0                    
#     code     create a custom expect string        sprintf(custom, "ALL End Ints     : n=   0, h=%4d, t=%4d",  -1  ,  -1  );                                                                                        
#     get      verify the list of all links         yDLST_greybox         "all_end_int"  , 0                                            c_equal     custom                                                       
#
#   COND       add and verify a empty new list                                                                                                                                                                       
#     exec     setup the linked list                yDLST_create          &x_list1, "", NULL                                            i_equal     0                                                            
#     get      review the list counts               yDLST_greybox         "list_count",    0                                            s_equal     LIST Counts      : n=   1, f=   1, b=   1                    
#     code     create a custom expect string        sprintf(custom, "LIST End Ints    : n=   1, h=%4d, t=%4d", x_list1, x_list1);                                                                                    
#     get      verify the list of lists             yDLST_greybox         "list_end_int",  0                                            c_equal     custom                                                       
#     get      review the count of all links        yDLST_greybox         "all_count",     0                                            s_equal     ALL Counts       : n=   0, f=   0, b=   0                    
#     code     create a custom expect string        sprintf(custom, "ALL End Ints     : n=   0, h=%4d, t=%4d",  -1   ,  -1   );                                                                                      
#     get      verify the list of all links         yDLST_greybox         "all_end_int" ,  0                                            c_equal     custom                                                       
#
#   COND       add three links to the list                                                                                                                                                                           
#     exec     add a link, save the second          yDLST_new             x_list1, &x_head, NULL, x_pay1                                      i_equal     0                                                            
#     exec     add a link, save this middle         yDLST_new             x_list1, &x_save, NULL, x_pay2                                      i_equal     0                                                            
#     exec     add a link, save tail                yDLST_new             x_list1, &x_tail, NULL, x_pay3                                      i_equal     0                                                            
#     get      verify the lists link counts         yDLST_greybox         "link_count",    x_list1                                      s_equal     LINK Counts      : n=   3, f=   3, b=   3                    
#     code     create a custom expect string        sprintf(custom, "LINK End Ints    : n=   3, h=%4d, t=%4d", x_head, x_tail);                                                                                      
#     get      verify the list of links             yDLST_greybox         "link_end_int",  x_list1                                      c_equal     custom                                                       
#     get      review the count of all links        yDLST_greybox         "all_count",     0                                            s_equal     ALL Counts       : n=   3, f=   3, b=   3                    
#     code     create a custom expect string        sprintf(custom, "ALL End Ints     : n=   3, h=%4d, t=%4d", x_head, x_tail);                                                                                      
#     get      verify the list of all links         yDLST_greybox         "all_end_int",   0                                            c_equal     custom                                                       
#
#   COND       add and verify a second list                                                                                                                                                                          
#     exec     setup the linked list                yDLST_create          &x_list2, "", NULL                                            i_equal     0                                                            
#     get      review the list counts               yDLST_greybox         "list_count",    0                                            s_equal     LIST Counts      : n=   2, f=   2, b=   2                    
#     code     create a custom expect string        sprintf(custom, "LIST End Ints    : n=   2, h=%4d, t=%4d", x_list1, x_list2);                                                                                    
#     get      verify the list of lists             yDLST_greybox         "list_end_int",  0                                            c_equal     custom                                                       
#     get      review the count of all links        yDLST_greybox         "all_count",     0                                            s_equal     ALL Counts       : n=   3, f=   3, b=   3                    
#     code     create a custom expect string        sprintf(custom, "ALL End Ints     : n=   3, h=%4d, t=%4d", x_head, x_tail);                                                                                      
#     get      verify the list of all links         yDLST_greybox         "all_end_int" ,  0                                            c_equal     custom                                                       
#
#   COND       add two links to the second list                                                                                                                                                                      
#     exec     add a link, save head                yDLST_new             x_list2, &x_temp, NULL, x_pay4                                      i_equal     0                                                            
#     exec     add a link, save tail                yDLST_new             x_list2, &x_more, NULL, x_pay5                                      i_equal     0                                                            
#     get      verify the lists link counts         yDLST_greybox         "link_count",    x_list2                                      s_equal     LINK Counts      : n=   2, f=   2, b=   2                    
#     code     create a custom expect string        sprintf(custom, "LINK End Ints    : n=   2, h=%4d, t=%4d", x_temp, x_more);                                                                                      
#     get      verify the list of links             yDLST_greybox         "link_end_int",  x_list2                                      c_equal     custom                                                       
#     get      review the count of all links        yDLST_greybox         "all_count",     0                                            s_equal     ALL Counts       : n=   5, f=   5, b=   5                    
#     code     create a custom expect string        sprintf(custom, "ALL End Ints     : n=   5, h=%4d, t=%4d", x_head, x_more);                                                                                      
#     get      verify the list of all links         yDLST_greybox         "all_end_int",   0                                            c_equal     custom                                                       
#
#   COND       add and verify a third list                                                                                                                                                                           
#     exec     setup the linked list                yDLST_create          &x_list3, "", NULL                                            i_equal     0                                                            
#     get      review the list counts               yDLST_greybox         "list_count",    0                                            s_equal     LIST Counts      : n=   3, f=   3, b=   3                    
#     code     create a custom expect string        sprintf(custom, "LIST End Ints    : n=   3, h=%4d, t=%4d", x_list1, x_list3);                                                                                    
#     get      verify the list of lists             yDLST_greybox         "list_end_int",  0                                            c_equal     custom                                                       
#     get      review the count of all links        yDLST_greybox         "all_count",     0                                            s_equal     ALL Counts       : n=   5, f=   5, b=   5                    
#     code     create a custom expect string        sprintf(custom, "ALL End Ints     : n=   5, h=%4d, t=%4d", x_head, x_more);                                                                                      
#     get      verify the list of all links         yDLST_greybox         "all_end_int" ,  0                                            c_equal     custom                                                       
#
#   COND       add one link to the third list                                                                                                                                                                        
#     exec     add a link, save head                yDLST_new             x_list3, &x_temp, NULL, x_pay6                                      i_equal     0                                                            
#     get      verify the lists link counts         yDLST_greybox         "link_count",    x_list3                                      s_equal     LINK Counts      : n=   1, f=   1, b=   1                    
#     code     create a custom expect string        sprintf(custom, "LINK End Ints    : n=   1, h=%4d, t=%4d", x_temp, x_temp);                                                                                      
#     get      verify the list of links             yDLST_greybox         "link_end_int",  x_list3                                      c_equal     custom                                                       
#     get      review the count of all links        yDLST_greybox         "all_count",     0                                            s_equal     ALL Counts       : n=   6, f=   6, b=   6                    
#     code     create a custom expect string        sprintf(custom, "ALL End Ints     : n=   6, h=%4d, t=%4d", x_head, x_temp);                                                                                      
#     get      verify the list of all links         yDLST_greybox         "all_end_int",   0                                            c_equal     custom                                                       
#
#   COND       verify all lists                                                                                                                                                                                      
#     get      verify the lists link counts         yDLST_greybox         "link_count",    x_list1                                      s_equal     LINK Counts      : n=   3, f=   3, b=   3                    
#     get      verify the lists link counts         yDLST_greybox         "link_count",    x_list2                                      s_equal     LINK Counts      : n=   2, f=   2, b=   2                    
#     get      verify the lists link counts         yDLST_greybox         "link_count",    x_list3                                      s_equal     LINK Counts      : n=   1, f=   1, b=   1                    
#     get      review the count of all links        yDLST_greybox         "all_count",     0                                            s_equal     ALL Counts       : n=   6, f=   6, b=   6                    
#
#   COND       run through full list                                                                                                                                                                                 
#     exec     get the head                         yDLST_links           HEAD                                                          p_equal     x_pay1                                                       
#     exec     get next                             yDLST_links           NEXT                                                          p_equal     x_pay2                                                       
#     exec     get next                             yDLST_links           NEXT                                                          p_equal     x_pay3                                                       
#     exec     get next                             yDLST_links           NEXT                                                          p_equal     x_pay4                                                       
#     exec     get next                             yDLST_links           NEXT                                                          p_equal     x_pay5                                                       
#     exec     get next                             yDLST_links           NEXT                                                          p_equal     x_pay6                                                       
#     exec     get next                             yDLST_links           NEXT                                                          p_equal     NULL                                                         
#     exec     get next, past end again (bad)       yDLST_links           NEXT                                                          p_equal     NULL                                                         
#
#   COND       run through first list                                                                                                                                                                                
#     exec     get the head                         yDLST_list            x_list1, HEAD                                                 p_equal     x_pay1                                                       
#     exec     get next                             yDLST_list            CURR   , NEXT                                                 p_equal     x_pay2                                                       
#     exec     get next                             yDLST_list            CURR   , NEXT                                                 p_equal     x_pay3                                                       
#     exec     get next                             yDLST_list            CURR   , NEXT                                                 p_equal     NULL                                                         
#     exec     get next, past end again (bad)       yDLST_list            CURR   , NEXT                                                 p_equal     NULL                                                         
#
#   COND       run through second list                                                                                                                                                                               
#     exec     get the head                         yDLST_list            x_list2, HEAD                                                 p_equal     x_pay4                                                       
#     exec     get next                             yDLST_list            CURR   , NEXT                                                 p_equal     x_pay5                                                       
#     exec     get next                             yDLST_list            CURR   , NEXT                                                 p_equal     NULL                                                         
#
#   COND       run through third list                                                                                                                                                                                
#     exec     get the head                         yDLST_list            x_list3, HEAD                                                 p_equal     x_pay6                                                       
#     exec     get next                             yDLST_list            CURR   , NEXT                                                 p_equal     NULL                                                         
#
#   COND       get specific entries in first list                                                                                                                                                                    
#     exec     get the last entry                   yDLST_list            x_list1, 2                                                    p_equal     x_pay3                                                       
#     exec     get the first                        yDLST_list            CURR   , 0                                                    p_equal     x_pay1                                                       
#     exec     try beyond end                       yDLST_list            CURR   , 3                                                    p_equal     NULL                                                         
#     exec     get the middle                       yDLST_list            CURR   , 1                                                    p_equal     x_pay2                                                       
#
#   COND       delete the tail from the first list                                                                                                                                                                   
#     exec     remove the link                      yDLST_free            x_tail                                                        i_equal     0                                                            
#     get      verify the lists link counts         yDLST_greybox         "link_count",    x_list1                                      s_equal     LINK Counts      : n=   2, f=   2, b=   2                    
#     code     create a custom expect string        sprintf(custom, "LINK End Ints    : n=   2, h=%4d, t=%4d", x_head, x_save);                                                                                      
#     get      verify the list of links             yDLST_greybox         "link_end_int",  x_list1                                      c_equal     custom                                                       
#     get      verify the lists link counts         yDLST_greybox         "link_count",    x_list1                                      s_equal     LINK Counts      : n=   2, f=   2, b=   2                    
#     get      verify the lists link counts         yDLST_greybox         "link_count",    x_list2                                      s_equal     LINK Counts      : n=   2, f=   2, b=   2                    
#     get      verify the lists link counts         yDLST_greybox         "link_count",    x_list3                                      s_equal     LINK Counts      : n=   1, f=   1, b=   1                    
#     get      review the count of all links        yDLST_greybox         "all_count",     0                                            s_equal     ALL Counts       : n=   5, f=   5, b=   5                    
#
#   COND       delete the head from the first list                                                                                                                                                                   
#     exec     remove the link                      yDLST_free            x_head                                                        i_equal     0                                                            
#     get      verify the lists link counts         yDLST_greybox         "link_count",    x_list1                                      s_equal     LINK Counts      : n=   1, f=   1, b=   1                    
#     code     create a custom expect string        sprintf(custom, "LINK End Ints    : n=   1, h=%4d, t=%4d", x_save, x_save);                                                                                      
#     get      verify the list of links             yDLST_greybox         "link_end_int",  x_list1                                      c_equal     custom                                                       
#     get      verify the lists link counts         yDLST_greybox         "link_count",    x_list1                                      s_equal     LINK Counts      : n=   1, f=   1, b=   1                    
#     get      verify the lists link counts         yDLST_greybox         "link_count",    x_list2                                      s_equal     LINK Counts      : n=   2, f=   2, b=   2                    
#     get      verify the lists link counts         yDLST_greybox         "link_count",    x_list3                                      s_equal     LINK Counts      : n=   1, f=   1, b=   1                    
#     get      review the count of all links        yDLST_greybox         "all_count",     0                                            s_equal     ALL Counts       : n=   4, f=   4, b=   4                    
#
#   COND       purge the second list                                                                                                                                                                                 
#     exec     purge the list                       yDLST_purge           x_list2                                                       i_equal     0                                                            
#     get      verify the lists link counts         yDLST_greybox         "link_count",    x_list2                                      s_equal     LINK Counts      : n=   0, f=   0, b=   0                    
#     code     create a custom expect string        sprintf(custom, "LINK End Ints    : n=   0, h=%4d, t=%4d",  -1   ,  -1   );                                                                                      
#     get      verify the list of links             yDLST_greybox         "link_end_int",  x_list2                                      c_equal     custom                                                       
#     get      verify the lists link counts         yDLST_greybox         "link_count",    x_list1                                      s_equal     LINK Counts      : n=   1, f=   1, b=   1                    
#     get      verify the lists link counts         yDLST_greybox         "link_count",    x_list2                                      s_equal     LINK Counts      : n=   0, f=   0, b=   0                    
#     get      verify the lists link counts         yDLST_greybox         "link_count",    x_list3                                      s_equal     LINK Counts      : n=   1, f=   1, b=   1                    
#     get      review the count of all links        yDLST_greybox         "all_count",     0                                            s_equal     ALL Counts       : n=   2, f=   2, b=   2                    
#
#   COND       delete the first list                                                                                                                                                                                 
#     exec     delete the list                      yDLST_destroy         x_list1                                                       i_equal     0                                                            
#     get      verify the lists link counts         yDLST_greybox         "link_count",    x_list1                                      s_equal     LINK Counts      : NULL LIST                                 
#     code     create a custom expect string        sprintf(custom, "LINK End Ints    : NULL LIST");                                                                                                                 
#     get      verify the list of links             yDLST_greybox         "link_end_int",  x_list1                                      c_equal     custom                                                       
#     get      review the list counts               yDLST_greybox         "list_count",    0                                            s_equal     LIST Counts      : n=   2, f=   2, b=   2                    
#     code     create a custom expect string        sprintf(custom, "LIST End Ints    : n=   2, h=%4d, t=%4d", x_list2, x_list3);                                                                                    
#     get      verify the list of lists             yDLST_greybox         "list_end_int",  0                                            c_equal     custom                                                       
#     get      verify the lists link counts         yDLST_greybox         "link_count",    x_list1                                      s_equal     LINK Counts      : NULL LIST                                 
#     get      verify the lists link counts         yDLST_greybox         "link_count",    x_list2                                      s_equal     LINK Counts      : n=   0, f=   0, b=   0                    
#     get      verify the lists link counts         yDLST_greybox         "link_count",    x_list3                                      s_equal     LINK Counts      : n=   1, f=   1, b=   1                    
#     get      review the count of all links        yDLST_greybox         "all_count",     0                                            s_equal     ALL Counts       : n=   1, f=   1, b=   1                    
#
#   COND       try to add a link to the deleted list                                                                                                                                                                 
#     exec     add a link, save head                yDLST_new             x_list1, &x_temp, NULL, x_pay6                                      i_not       0                                                            
#     get      verify the lists link counts         yDLST_greybox         "link_count",    x_list1                                      s_equal     LINK Counts      : NULL LIST                                 
#     get      verify the lists link counts         yDLST_greybox         "link_count",    x_list2                                      s_equal     LINK Counts      : n=   0, f=   0, b=   0                    
#     get      verify the lists link counts         yDLST_greybox         "link_count",    x_list3                                      s_equal     LINK Counts      : n=   1, f=   1, b=   1                    
#     get      review the count of all links        yDLST_greybox         "all_count",     0                                            s_equal     ALL Counts       : n=   1, f=   1, b=   1                    
#
#   COND       purge the third list                                                                                                                                                                                  
#     exec     purge the list                       yDLST_purge           x_list3                                                       i_equal     0                                                            
#     get      review the count of all links        yDLST_greybox         "all_count",     0                                            s_equal     ALL Counts       : n=   0, f=   0, b=   0                    
#
#   COND       run through full list                                                                                                                                                                                 
#     exec     get the head, nothing                yDLST_links           HEAD                                                          p_equal     NULL                                                         
#     exec     get next, past end again (bad)       yDLST_links           NEXT                                                          p_equal     NULL                                                         
#
#   COND       teardown library (should destroy all lists/links)                                                                                                                                                     
#     exec     wrapup the library                   yDLST_end                                                                           i_equal     0                                                            
#     get      review the list counts               yDLST_greybox         "list_count",    0                                            s_equal     LIST Counts      : n=   0, f=   0, b=   0                    
#     code     create a custom expect string        sprintf(custom, "LIST End Ints    : n=   0, h=%4d, t=%4d",  -1  ,  -1  );                                                                                        
#     get      verify the list of lists             yDLST_greybox         "list_end_int" , 0                                            c_equal     custom                                                       
#     get      review the count of all links        yDLST_greybox         "all_count",     0                                            s_equal     ALL Counts       : n=   0, f=   0, b=   0                    
#     code     create a custom expect string        sprintf(custom, "ALL End Ints     : n=   0, h=%4d, t=%4d",  -1  ,  -1  );                                                                                        
#     get      verify the list of all links         yDLST_greybox         "all_end_int"  , 0                                            c_equal     custom                                                       
#
#
#
##==(verb)===  ===========(short desc)============  =====(function)=====  ========================(arguments)=========================  ==========  ==========================(results)========================= 
#SCRP          focus and active list testing        yDLST_focus, active                                                                                                                                            
#
#   COND       setup library                                                                                                                                                                                         
#     exec     setup the library                    yDLST_begin                                                                         i_equal     0                                                            
#
#   COND       setup list pointers                                                                                                                                                                                   
#     code     create a list pointer                int    x_list1 = 0;                                                                                                                                              
#     code     create a list pointer                int    x_list2 = 0;                                                                                                                                              
#     code     create a list pointer                int    x_list3 = 0;                                                                                                                                              
#
#   COND       setup link pointers                                                                                                                                                                                   
#     code     create a custom expect string        char custom[2000];                                                                                                                                               
#     code     create a pointer to the first dep    int   x_head = 0;                                                                                                                                                
#     code     create a pointer to a mid-point      int   x_save = 0;                                                                                                                                                
#     code     create a pointer to one after that   int   x_more = 0;                                                                                                                                                
#     code     create a pointer to the last dep     int   x_tail = 0;                                                                                                                                                
#     code     create a pointer for temp            int   x_temp = 0;                                                                                                                                                
#
#   COND       setup data payloads                                                                                                                                                                                   
#     code     create a payload                     char *x_payh = "payload for head";                                                                                                                               
#     code     create a payload                     void *x_pays = "payload for save";                                                                                                                               
#     code     create a payload                     void *x_payt = "payload for tail";                                                                                                                               
#     code     create a payload                     void *x_paym = "payload for more";                                                                                                                               
#
#   COND       verify a blank slate to start                                                                                                                                                                         
#     get      review the list counts               yDLST_greybox         "list_count",    0                                            s_equal     LIST Counts      : n=   0, f=   0, b=   0                    
#     code     create a custom expect string        sprintf(custom, "LIST End Ints    : n=   0, h=%4d, t=%4d",  -1  ,  -1  );                                                                                        
#     get      verify the list of lists             yDLST_greybox         "list_end_int" , 0                                            c_equal     custom                                                       
#     get      review the count of all links        yDLST_greybox         "all_count",     0                                            s_equal     ALL Counts       : n=   0, f=   0, b=   0                    
#     code     create a custom expect string        sprintf(custom, "ALL End Ints     : n=   0, h=%4d, t=%4d",  -1  ,  -1  );                                                                                        
#     get      verify the list of all links         yDLST_greybox         "all_end_int"  , 0                                            c_equal     custom                                                       
#
#   COND       add and verify a empty new list                                                                                                                                                                       
#     exec     setup the linked list                yDLST_create          &x_list1, "", NULL                                            i_equal     0                                                            
#     get      review the list counts               yDLST_greybox         "list_count",    0                                            s_equal     LIST Counts      : n=   1, f=   1, b=   1                    
#     code     create a custom expect string        sprintf(custom, "LIST End Ints    : n=   1, h=%4d, t=%4d", x_list1, x_list1);                                                                                    
#     get      verify the list of lists             yDLST_greybox         "list_end_int",  0                                            c_equal     custom                                                       
#     get      review the count of all links        yDLST_greybox         "all_count",     0                                            s_equal     ALL Counts       : n=   0, f=   0, b=   0                    
#     code     create a custom expect string        sprintf(custom, "ALL End Ints     : n=   0, h=%4d, t=%4d",  -1   ,  -1   );                                                                                      
#     get      verify the list of all links         yDLST_greybox         "all_end_int" ,  0                                            c_equal     custom                                                       
#
#   COND       add three links to the list                                                                                                                                                                           
#     exec     add a link, save the head            yDLST_new             x_list1, &x_head, NULL, x_payh                                      i_equal     0                                                            
#     exec     add a link, save this middle         yDLST_new             x_list1, &x_save, NULL, x_pays                                      i_equal     0                                                            
#     exec     add a link, save tail                yDLST_new             x_list1, &x_tail, NULL, x_payt                                      i_equal     0                                                            
#     get      verify the lists link counts         yDLST_greybox         "link_count",    x_list1                                      s_equal     LINK Counts      : n=   3, f=   3, b=   3                    
#     code     create a custom expect string        sprintf(custom, "LINK End Ints    : n=   3, h=%4d, t=%4d", x_head, x_tail);                                                                                      
#     get      verify the list of links             yDLST_greybox         "link_end_int",  x_list1                                      c_equal     custom                                                       
#     get      review the count of all links        yDLST_greybox         "all_count",     0                                            s_equal     ALL Counts       : n=   3, f=   3, b=   3                    
#     code     create a custom expect string        sprintf(custom, "ALL End Ints     : n=   3, h=%4d, t=%4d", x_head, x_tail);                                                                                      
#     get      verify the list of all links         yDLST_greybox         "all_end_int",   0                                            c_equal     custom                                                       
#
#   COND       add and verify a second list                                                                                                                                                                          
#     exec     setup the linked list                yDLST_create          &x_list2, "", NULL                                            i_equal     0                                                            
#     get      review the list counts               yDLST_greybox         "list_count",    0                                            s_equal     LIST Counts      : n=   2, f=   2, b=   2                    
#     code     create a custom expect string        sprintf(custom, "LIST End Ints    : n=   2, h=%4d, t=%4d", x_list1, x_list2);                                                                                    
#     get      verify the list of lists             yDLST_greybox         "list_end_int",  0                                            c_equal     custom                                                       
#     get      review the count of all links        yDLST_greybox         "all_count",     0                                            s_equal     ALL Counts       : n=   3, f=   3, b=   3                    
#     code     create a custom expect string        sprintf(custom, "ALL End Ints     : n=   3, h=%4d, t=%4d", x_head, x_tail);                                                                                      
#     get      verify the list of all links         yDLST_greybox         "all_end_int" ,  0                                            c_equal     custom                                                       
#
#   COND       add two links to the second list                                                                                                                                                                      
#     exec     add a link, save head                yDLST_new             x_list2, &x_temp, NULL, x_payh                                      i_equal     0                                                            
#     exec     add a link, save tail                yDLST_new             x_list2, &x_more, NULL, x_paym                                      i_equal     0                                                            
#     get      verify the lists link counts         yDLST_greybox         "link_count",    x_list2                                      s_equal     LINK Counts      : n=   2, f=   2, b=   2                    
#     code     create a custom expect string        sprintf(custom, "LINK End Ints    : n=   2, h=%4d, t=%4d", x_temp, x_more);                                                                                      
#     get      verify the list of links             yDLST_greybox         "link_end_int",  x_list2                                      c_equal     custom                                                       
#     get      review the count of all links        yDLST_greybox         "all_count",     0                                            s_equal     ALL Counts       : n=   5, f=   5, b=   5                    
#     code     create a custom expect string        sprintf(custom, "ALL End Ints     : n=   5, h=%4d, t=%4d", x_head, x_more);                                                                                      
#     get      verify the list of all links         yDLST_greybox         "all_end_int",   0                                            c_equal     custom                                                       
#
#   COND       add and verify a third list                                                                                                                                                                           
#     exec     setup the linked list                yDLST_create          &x_list3, "", NULL                                            i_equal     0                                                            
#     get      review the list counts               yDLST_greybox         "list_count",    0                                            s_equal     LIST Counts      : n=   3, f=   3, b=   3                    
#     code     create a custom expect string        sprintf(custom, "LIST End Ints    : n=   3, h=%4d, t=%4d", x_list1, x_list3);                                                                                    
#     get      verify the list of lists             yDLST_greybox         "list_end_int",  0                                            c_equal     custom                                                       
#     get      review the count of all links        yDLST_greybox         "all_count",     0                                            s_equal     ALL Counts       : n=   5, f=   5, b=   5                    
#     code     create a custom expect string        sprintf(custom, "ALL End Ints     : n=   5, h=%4d, t=%4d", x_head, x_more);                                                                                      
#     get      verify the list of all links         yDLST_greybox         "all_end_int" ,  0                                            c_equal     custom                                                       
#
#   COND       add one link to the third list                                                                                                                                                                        
#     exec     add a link                           yDLST_new             x_list3, &x_temp, NULL, x_payh                                      i_equal     0                                                            
#     get      verify the lists link counts         yDLST_greybox         "link_count",    x_list3                                      s_equal     LINK Counts      : n=   1, f=   1, b=   1                    
#     code     create a custom expect string        sprintf(custom, "LINK End Ints    : n=   1, h=%4d, t=%4d", x_temp, x_temp);                                                                                      
#     get      verify the list of links             yDLST_greybox         "link_end_int",  x_list3                                      c_equal     custom                                                       
#     get      review the count of all links        yDLST_greybox         "all_count",     0                                            s_equal     ALL Counts       : n=   6, f=   6, b=   6                    
#     code     create a custom expect string        sprintf(custom, "ALL End Ints     : n=   6, h=%4d, t=%4d", x_head, x_temp);                                                                                      
#     get      verify the list of all links         yDLST_greybox         "all_end_int",   0                                            c_equal     custom                                                       
#
#   COND       add tail to focus list                                                                                                                                                                                
#     get      review the count of focus links      yDLST_greybox         "focus_count",   0                                            s_equal     Focus Counts     : n=   0, f=   0, b=   0                    
#     code     create a custom expect string        sprintf(custom, "Focus End Ints   : n=   0, h=%4d, t=%4d",  -1   ,  -1   );                                                                                      
#     get      verify the list of all links         yDLST_greybox         "focus_end_int", 0                                            c_equal     custom                                                       
#     exec     add to focus list                    yDLST_focus_on        x_tail                                                        i_equal     0                                                            
#     get      review the count of focus links      yDLST_greybox         "focus_count",   0                                            s_equal     Focus Counts     : n=   1, f=   1, b=   1                    
#     code     create a custom expect string        sprintf(custom, "Focus End Ints   : n=   1, h=%4d, t=%4d", x_tail, x_tail);                                                                                      
#     get      verify the list of all links         yDLST_greybox         "focus_end_int", 0                                            c_equal     custom                                                       
#
#   COND       add head to focus list                                                                                                                                                                                
#     exec     add to focus list                    yDLST_focus_on        x_head                                                        i_equal     0                                                            
#     get      review the count of focus links      yDLST_greybox         "focus_count",   0                                            s_equal     Focus Counts     : n=   2, f=   2, b=   2                    
#     code     create a custom expect string        sprintf(custom, "Focus End Ints   : n=   2, h=%4d, t=%4d", x_tail, x_head);                                                                                      
#     get      verify the list of all links         yDLST_greybox         "focus_end_int", 0                                            c_equal     custom                                                       
#
#   COND       add two more to focuse list                                                                                                                                                                           
#     exec     add to focus list                    yDLST_focus_on        x_more                                                        i_equal     0                                                            
#     exec     add to focus list                    yDLST_focus_on        x_save                                                        i_equal     0                                                            
#     get      review the count of focus links      yDLST_greybox         "focus_count",   0                                            s_equal     Focus Counts     : n=   4, f=   4, b=   4                    
#     code     create a custom expect string        sprintf(custom, "Focus End Ints   : n=   4, h=%4d, t=%4d", x_tail, x_save);                                                                                      
#     get      verify the list of all links         yDLST_greybox         "focus_end_int", 0                                            c_equal     custom                                                       
#
#   COND       run through focus list                                                                                                                                                                                
#     exec     get the head                         yDLST_focus           HEAD                                                          p_equal     x_payt                                                       
#     exec     get next                             yDLST_focus           NEXT                                                          p_equal     x_payh                                                       
#     exec     get next                             yDLST_focus           NEXT                                                          p_equal     x_paym                                                       
#     exec     get next                             yDLST_focus           NEXT                                                          p_equal     x_pays                                                       
#     exec     get next                             yDLST_focus           NEXT                                                          p_equal     NULL                                                         
#
#   COND       get specific entries from focus list                                                                                                                                                                  
#     exec     get second                           yDLST_focus           1                                                             p_equal     x_payh                                                       
#     exec     get fourth                           yDLST_focus           3                                                             p_equal     x_pays                                                       
#     exec     get first                            yDLST_focus           0                                                             p_equal     x_payt                                                       
#     exec     get fiftieth                         yDLST_focus           50                                                            p_equal     NULL                                                         
#     exec     get fifth                            yDLST_focus           4                                                             p_equal     NULL                                                         
#     exec     get third (good after bad)           yDLST_focus           2                                                             p_equal     x_paym                                                       
#
#   COND       remove one from focus list                                                                                                                                                                            
#     exec     delete from focus list               yDLST_focus_off       x_more                                                        i_equal     0                                                            
#     get      review the count of focus links      yDLST_greybox         "focus_count",   0                                            s_equal     Focus Counts     : n=   3, f=   3, b=   3                    
#     code     create a custom expect string        sprintf(custom, "Focus End Ints   : n=   3, h=%4d, t=%4d", x_tail, x_save);                                                                                      
#     get      verify the list of all links         yDLST_greybox         "focus_end_int", 0                                            c_equal     custom                                                       
#
#   COND       run through focus list                                                                                                                                                                                
#     exec     get the head                         yDLST_focus           HEAD                                                          p_equal     x_payt                                                       
#     exec     get next                             yDLST_focus           NEXT                                                          p_equal     x_payh                                                       
#     exec     get next                             yDLST_focus           NEXT                                                          p_equal     x_pays                                                       
#     exec     get next                             yDLST_focus           NEXT                                                          p_equal     NULL                                                         
#
#   COND       add head to active list                                                                                                                                                                               
#     exec     add to active list                   yDLST_active_on       x_head                                                        i_equal     0                                                            
#     get      review the count of active links     yDLST_greybox         "active_count",  0                                            s_equal     Active Counts    : n=   1, f=   1, b=   1                    
#     code     create a custom expect string        sprintf(custom, "Active End Ints  : n=   1, h=%4d, t=%4d", x_head, x_head);                                                                                      
#     get      verify the list of all links         yDLST_greybox         "active_end_int",0                                            c_equal     custom                                                       
#
#   COND       add two more to focuse list                                                                                                                                                                           
#     exec     add to focus list                    yDLST_active_on       x_tail                                                        i_equal     0                                                            
#     exec     add to focus list                    yDLST_active_on       x_more                                                        i_equal     0                                                            
#     get      review the count of focus links      yDLST_greybox         "active_count",  0                                            s_equal     Active Counts    : n=   3, f=   3, b=   3                    
#     code     create a custom expect string        sprintf(custom, "Active End Ints  : n=   3, h=%4d, t=%4d", x_head, x_more);                                                                                      
#     get      verify the list of all links         yDLST_greybox         "active_end_int",0                                            c_equal     custom                                                       
#
#   COND       run through active list                                                                                                                                                                               
#     exec     get the head                         yDLST_active          HEAD                                                          p_equal     x_payh                                                       
#     exec     get next                             yDLST_active          NEXT                                                          p_equal     x_payt                                                       
#     exec     get next                             yDLST_active          NEXT                                                          p_equal     x_paym                                                       
#     exec     get next                             yDLST_active          NEXT                                                          p_equal     NULL                                                         
#     exec     get next, past end again (bad)       yDLST_active          NEXT                                                          p_equal     NULL                                                         
#
#   COND       get specific entries from the active list                                                                                                                                                             
#     exec     get last                             yDLST_active          2                                                             p_equal     x_paym                                                       
#     exec     get middle                           yDLST_active          1                                                             p_equal     x_payt                                                       
#     exec     get first                            yDLST_active          0                                                             p_equal     x_payh                                                       
#     exec     get past last                        yDLST_active          3                                                             p_equal     NULL                                                         
#
#   COND       add head to active list, again (bad)                                                                                                                                                                  
#     exec     add to active list                   yDLST_active_on       x_head                                                        i_not       0                                                            
#     get      review the count of active links     yDLST_greybox         "active_count",  0                                            s_equal     Active Counts    : n=   3, f=   3, b=   3                    
#     code     create a custom expect string        sprintf(custom, "Active End Ints  : n=   3, h=%4d, t=%4d", x_head, x_more);                                                                                      
#     get      verify the list of all links         yDLST_greybox         "active_end_int",0                                            c_equal     custom                                                       
#
#   COND       add bad link numbir to active list                                                                                                                                                                    
#     exec     add to active list                   yDLST_active_on       50                                                            i_not       0                                                            
#     get      review the count of active links     yDLST_greybox         "active_count",  0                                            s_equal     Active Counts    : n=   3, f=   3, b=   3                    
#     code     create a custom expect string        sprintf(custom, "Active End Ints  : n=   3, h=%4d, t=%4d", x_head, x_more);                                                                                      
#     get      verify the list of all links         yDLST_greybox         "active_end_int",0                                            c_equal     custom                                                       
#
#   COND       add head to focus list, again (bad)                                                                                                                                                                   
#     exec     add to focus list                    yDLST_focus_on        x_head                                                        i_not       0                                                            
#     get      review the count of focus links      yDLST_greybox         "focus_count",   0                                            s_equal     Focus Counts     : n=   3, f=   3, b=   3                    
#     code     create a custom expect string        sprintf(custom, "Focus End Ints   : n=   3, h=%4d, t=%4d", x_tail, x_save);                                                                                      
#     get      verify the list of all links         yDLST_greybox         "focus_end_int", 0                                            c_equal     custom                                                       
#
#   COND       add bad link number to focus list                                                                                                                                                                     
#     exec     add to focus list                    yDLST_focus_on        50                                                            i_not       0                                                            
#     get      review the count of focus links      yDLST_greybox         "focus_count",   0                                            s_equal     Focus Counts     : n=   3, f=   3, b=   3                    
#     code     create a custom expect string        sprintf(custom, "Focus End Ints   : n=   3, h=%4d, t=%4d", x_tail, x_save);                                                                                      
#     get      verify the list of all links         yDLST_greybox         "focus_end_int", 0                                            c_equal     custom                                                       
#
#   COND       add more back to focus list                                                                                                                                                                           
#     exec     add to focus list                    yDLST_focus_on        x_more                                                        i_equal     0                                                            
#     get      review the count of focus links      yDLST_greybox         "focus_count",   0                                            s_equal     Focus Counts     : n=   4, f=   4, b=   4                    
#     code     create a custom expect string        sprintf(custom, "Focus End Ints   : n=   4, h=%4d, t=%4d", x_tail, x_more);                                                                                      
#     get      verify the list of all links         yDLST_greybox         "focus_end_int", 0                                            c_equal     custom                                                       
#
#   COND       run through focus list                                                                                                                                                                                
#     exec     get the head                         yDLST_focus           HEAD                                                          p_equal     x_payt                                                       
#     exec     get next                             yDLST_focus           NEXT                                                          p_equal     x_payh                                                       
#     exec     get next                             yDLST_focus           NEXT                                                          p_equal     x_pays                                                       
#     exec     get next                             yDLST_focus           NEXT                                                          p_equal     x_paym                                                       
#     exec     get next                             yDLST_focus           NEXT                                                          p_equal     NULL                                                         
#
#   COND       verify other lists                                                                                                                                                                                    
#     get      review the list1 counts              yDLST_greybox         "link_count",    x_list1                                      s_equal     LINK Counts      : n=   3, f=   3, b=   3                    
#     get      review the list2 counts              yDLST_greybox         "link_count",    x_list2                                      s_equal     LINK Counts      : n=   2, f=   2, b=   2                    
#     get      review the list3 counts              yDLST_greybox         "link_count",    x_list3                                      s_equal     LINK Counts      : n=   1, f=   1, b=   1                    
#
#   COND       delete one on both lists (really bad)                                                                                                                                                                 
#     exec     remove the link                      yDLST_free            x_tail                                                        i_equal     0                                                            
#     get      review the count of focus links      yDLST_greybox         "focus_count",   0                                            s_equal     Focus Counts     : n=   3, f=   3, b=   3                    
#     code     create a custom expect string        sprintf(custom, "Focus End Ints   : n=   3, h=%4d, t=%4d", x_head, x_more);                                                                                      
#     get      verify the list of all links         yDLST_greybox         "focus_end_int", 0                                            c_equal     custom                                                       
#     get      review the count of active links     yDLST_greybox         "active_count",  0                                            s_equal     Active Counts    : n=   2, f=   2, b=   2                    
#     code     create a custom expect string        sprintf(custom, "Active End Ints  : n=   2, h=%4d, t=%4d", x_head, x_more);                                                                                      
#     get      verify the list of all links         yDLST_greybox         "active_end_int",0                                            c_equal     custom                                                       
#
#   COND       run through focus list                                                                                                                                                                                
#     exec     get head                             yDLST_focus           HEAD                                                          p_equal     x_payh                                                       
#     exec     get next                             yDLST_focus           NEXT                                                          p_equal     x_pays                                                       
#     exec     get next                             yDLST_focus           NEXT                                                          p_equal     x_paym                                                       
#     exec     get next                             yDLST_focus           NEXT                                                          p_equal     NULL                                                         
#
#   COND       run through active list                                                                                                                                                                               
#     exec     get the head                         yDLST_active          HEAD                                                          p_equal     x_payh                                                       
#     exec     get next                             yDLST_active          NEXT                                                          p_equal     x_paym                                                       
#     exec     get next                             yDLST_active          NEXT                                                          p_equal     NULL                                                         
#
#   COND       verify other lists                                                                                                                                                                                    
#     get      review the list1 counts              yDLST_greybox         "link_count",    x_list1                                      s_equal     LINK Counts      : n=   2, f=   2, b=   2                    
#     get      review the list2 counts              yDLST_greybox         "link_count",    x_list2                                      s_equal     LINK Counts      : n=   2, f=   2, b=   2                    
#     get      review the list3 counts              yDLST_greybox         "link_count",    x_list3                                      s_equal     LINK Counts      : n=   1, f=   1, b=   1                    
#     get      review the count of all links        yDLST_greybox         "all_count",     0                                            s_equal     ALL Counts       : n=   5, f=   5, b=   5                    
#
#   COND       teardown library (should destroy all lists/links)                                                                                                                                                     
#     exec     wrapup the library                   yDLST_end                                                                           i_equal     0                                                            
#     get      review the list counts               yDLST_greybox         "list_count",    0                                            s_equal     LIST Counts      : n=   0, f=   0, b=   0                    
#     code     create a custom expect string        sprintf(custom, "LIST End Ints    : n=   0, h=%4d, t=%4d",  -1  ,  -1  );                                                                                        
#     get      verify the list of lists             yDLST_greybox         "list_end_int" , 0                                            c_equal     custom                                                       
#     get      review the count of all links        yDLST_greybox         "all_count",     0                                            s_equal     ALL Counts       : n=   0, f=   0, b=   0                    
#     code     create a custom expect string        sprintf(custom, "ALL End Ints     : n=   0, h=%4d, t=%4d",  -1  ,  -1  );                                                                                        
#     get      verify the list of all links         yDLST_greybox         "all_end_int"  , 0                                            c_equal     custom                                                       
#
#
#
##==(verb)===  ===========(short desc)============  =====(function)=====  ========================(arguments)=========================  ==========  ==========================(results)========================= 
#SCRP          dependency and requirement testing   yDLST_tie,_untie                                                                                                                                               
#
#   COND       setup library                                                                                                                                                                                         
#     exec     setup the library                    yDLST_begin                                                                         i_equal     0                                                            
#
#   COND       setup list pointers                                                                                                                                                                                   
#     code     create a list pointer                int    x_list1 = 0;                                                                                                                                              
#     code     create a list pointer                int    x_list2 = 0;                                                                                                                                              
#     code     create a list pointer                int    x_list3 = 0;                                                                                                                                              
#
#   COND       setup link pointers                                                                                                                                                                                   
#     code     create a custom expect string        char custom[2000];                                                                                                                                               
#     code     create a pointer to the first dep    int   x_head = 0;                                                                                                                                                
#     code     create a pointer to a mid-point      int   x_save = 0;                                                                                                                                                
#     code     create a pointer to one after that   int   x_more = 0;                                                                                                                                                
#     code     create a pointer to the last dep     int   x_tail = 0;                                                                                                                                                
#     code     create a pointer for temp            int   x_temp = 0;                                                                                                                                                
#
#   COND       setup data payloads                                                                                                                                                                                   
#     code     create a payload                     char *x_payh = "payload for lead";                                                                                                                               
#     code     create a payload                     void *x_pays = "payload for save";                                                                                                                               
#     code     create a payload                     void *x_payt = "payload for tail";                                                                                                                               
#     code     create a payload                     void *x_paym = "payload for more";                                                                                                                               
#
#   COND       setup tie payloads                                                                                                                                                                                    
#     code     create a payload                     char *x_tie1 = "payload for tie1";                                                                                                                               
#     code     create a payload                     void *x_tie2 = "payload for tie2";                                                                                                                               
#     code     create a payload                     void *x_tie3 = "payload for tie3";                                                                                                                               
#     code     create a payload                     void *x_tie4 = "payload for tie4";                                                                                                                               
#     code     create a payload                     void *x_tie5 = "payload for tie5";                                                                                                                               
#
#   COND       verify a blank slate to start                                                                                                                                                                         
#     get      review the list counts               yDLST_greybox         "list_count",    0                                            s_equal     LIST Counts      : n=   0, f=   0, b=   0                    
#     code     create a custom expect string        sprintf(custom, "LIST End Ints    : n=   0, h=%4d, t=%4d",  -1  ,  -1  );                                                                                        
#     get      verify the list of lists             yDLST_greybox         "list_end_int" , 0                                            c_equal     custom                                                       
#     get      review the count of all links        yDLST_greybox         "all_count",     0                                            s_equal     ALL Counts       : n=   0, f=   0, b=   0                    
#     code     create a custom expect string        sprintf(custom, "ALL End Ints     : n=   0, h=%4d, t=%4d",  -1  ,  -1  );                                                                                        
#     get      verify the list of all links         yDLST_greybox         "all_end_int"  , 0                                            c_equal     custom                                                       
#
#   COND       add and verify a empty new list                                                                                                                                                                       
#     exec     setup the linked list                yDLST_create          &x_list1, "", NULL                                            i_equal     0                                                            
#     get      review the list counts               yDLST_greybox         "list_count",    0                                            s_equal     LIST Counts      : n=   1, f=   1, b=   1                    
#     code     create a custom expect string        sprintf(custom, "LIST End Ints    : n=   1, h=%4d, t=%4d", x_list1, x_list1);                                                                                    
#     get      verify the list of lists             yDLST_greybox         "list_end_int",  0                                            c_equal     custom                                                       
#     get      review the count of all links        yDLST_greybox         "all_count",     0                                            s_equal     ALL Counts       : n=   0, f=   0, b=   0                    
#     code     create a custom expect string        sprintf(custom, "ALL End Ints     : n=   0, h=%4d, t=%4d",  -1   ,  -1   );                                                                                      
#     get      verify the list of all links         yDLST_greybox         "all_end_int" ,  0                                            c_equal     custom                                                       
#
#   COND       add three links to the list                                                                                                                                                                           
#     exec     add a link, save the head            yDLST_new             x_list1, &x_head, NULL, x_payh                                i_equal     0                                                            
#     exec     add a link, save this middle         yDLST_new             x_list1, &x_save, NULL, x_pays                                i_equal     0                                                            
#     exec     add a link, save tail                yDLST_new             x_list1, &x_tail, NULL, x_payt                                i_equal     0                                                            
#     get      verify the lists link counts         yDLST_greybox         "link_count",    x_list1                                      s_equal     LINK Counts      : n=   3, f=   3, b=   3                    
#     code     create a custom expect string        sprintf(custom, "LINK End Ints    : n=   3, h=%4d, t=%4d", x_head, x_tail);                                                                                      
#     get      verify the list of links             yDLST_greybox         "link_end_int",  x_list1                                      c_equal     custom                                                       
#     get      review the count of all links        yDLST_greybox         "all_count",     0                                            s_equal     ALL Counts       : n=   3, f=   3, b=   3                    
#     code     create a custom expect string        sprintf(custom, "ALL End Ints     : n=   3, h=%4d, t=%4d", x_head, x_tail);                                                                                      
#     get      verify the list of all links         yDLST_greybox         "all_end_int",   0                                            c_equal     custom                                                       
#
#   COND       add and verify a second list                                                                                                                                                                          
#     exec     setup the linked list                yDLST_create          &x_list2, "", NULL                                            i_equal     0                                                            
#     get      review the list counts               yDLST_greybox         "list_count",    0                                            s_equal     LIST Counts      : n=   2, f=   2, b=   2                    
#     code     create a custom expect string        sprintf(custom, "LIST End Ints    : n=   2, h=%4d, t=%4d", x_list1, x_list2);                                                                                    
#     get      verify the list of lists             yDLST_greybox         "list_end_int",  0                                            c_equal     custom                                                       
#     get      review the count of all links        yDLST_greybox         "all_count",     0                                            s_equal     ALL Counts       : n=   3, f=   3, b=   3                    
#     code     create a custom expect string        sprintf(custom, "ALL End Ints     : n=   3, h=%4d, t=%4d", x_head, x_tail);                                                                                      
#     get      verify the list of all links         yDLST_greybox         "all_end_int" ,  0                                            c_equal     custom                                                       
#
#   COND       add two links to the second list                                                                                                                                                                      
#     exec     add a link, save head                yDLST_new             x_list2, &x_temp, NULL, x_payh                                i_equal     0                                                            
#     exec     add a link, save tail                yDLST_new             x_list2, &x_more, NULL, x_paym                                i_equal     0                                                            
#     get      verify the lists link counts         yDLST_greybox         "link_count",    x_list2                                      s_equal     LINK Counts      : n=   2, f=   2, b=   2                    
#     code     create a custom expect string        sprintf(custom, "LINK End Ints    : n=   2, h=%4d, t=%4d", x_temp, x_more);                                                                                      
#     get      verify the list of links             yDLST_greybox         "link_end_int",  x_list2                                      c_equal     custom                                                       
#     get      review the count of all links        yDLST_greybox         "all_count",     0                                            s_equal     ALL Counts       : n=   5, f=   5, b=   5                    
#     code     create a custom expect string        sprintf(custom, "ALL End Ints     : n=   5, h=%4d, t=%4d", x_head, x_more);                                                                                      
#     get      verify the list of all links         yDLST_greybox         "all_end_int",   0                                            c_equal     custom                                                       
#
#   COND       add and verify a third list                                                                                                                                                                           
#     exec     setup the linked list                yDLST_create          &x_list3, "", NULL                                            i_equal     0                                                            
#     get      review the list counts               yDLST_greybox         "list_count",    0                                            s_equal     LIST Counts      : n=   3, f=   3, b=   3                    
#     code     create a custom expect string        sprintf(custom, "LIST End Ints    : n=   3, h=%4d, t=%4d", x_list1, x_list3);                                                                                    
#     get      verify the list of lists             yDLST_greybox         "list_end_int",  0                                            c_equal     custom                                                       
#     get      review the count of all links        yDLST_greybox         "all_count",     0                                            s_equal     ALL Counts       : n=   5, f=   5, b=   5                    
#     code     create a custom expect string        sprintf(custom, "ALL End Ints     : n=   5, h=%4d, t=%4d", x_head, x_more);                                                                                      
#     get      verify the list of all links         yDLST_greybox         "all_end_int" ,  0                                            c_equal     custom                                                       
#
#   COND       add one link to the third list                                                                                                                                                                        
#     exec     add a link                           yDLST_new             x_list3, &x_temp, NULL, x_payh                                i_equal     0                                                            
#     get      verify the lists link counts         yDLST_greybox         "link_count",    x_list3                                      s_equal     LINK Counts      : n=   1, f=   1, b=   1                    
#     code     create a custom expect string        sprintf(custom, "LINK End Ints    : n=   1, h=%4d, t=%4d", x_temp, x_temp);                                                                                      
#     get      verify the list of links             yDLST_greybox         "link_end_int",  x_list3                                      c_equal     custom                                                       
#     get      review the count of all links        yDLST_greybox         "all_count",     0                                            s_equal     ALL Counts       : n=   6, f=   6, b=   6                    
#     code     create a custom expect string        sprintf(custom, "ALL End Ints     : n=   6, h=%4d, t=%4d", x_head, x_temp);                                                                                      
#     get      verify the list of all links         yDLST_greybox         "all_end_int",   0                                            c_equal     custom                                                       
#
#   COND       add a tie between head and tail                                                                                                                                                                       
#     exec     add a tie                            yDLST_tie             x_head, x_tail, x_tie1                                        i_equal     0                                                            
#     get      verify the tie counts (all-all)      yDLST_greybox         "ties_all"      , 0                                           s_equal     TIES All Counts  : n=   3, f=   3, b=   3                    
#     get      verify the tie counts (all)          yDLST_greybox         "ties_count"    , 0                                           s_equal     TIES Counts      : n=   1, f=   1, b=   1                    
#     get      verify the tie counts (head)         yDLST_greybox         "link_tie_count",x_head                                       s_equal     LINK Tie Counts  : nup=   0, fup=   0, ndn=   1, fdn=   1    
#     get      verify the tie counts (tail)         yDLST_greybox         "link_tie_count",x_tail                                       s_equal     LINK Tie Counts  : nup=   1, fup=   1, ndn=   0, fdn=   0    
#     get      verify the tie counts (save)         yDLST_greybox         "link_tie_count",x_save                                       s_equal     LINK Tie Counts  : nup=   0, fup=   0, ndn=   0, fdn=   0    
#     get      verify the tie counts (more)         yDLST_greybox         "link_tie_count",x_more                                       s_equal     LINK Tie Counts  : nup=   0, fup=   0, ndn=   0, fdn=   0    
#
#   COND       add a tie between tail and more                                                                                                                                                                       
#     exec     add a tie                            yDLST_tie             x_tail, x_more, x_tie2                                        i_equal     0                                                            
#     get      verify the tie counts (all-all)      yDLST_greybox         "ties_all"      , 0                                           s_equal     TIES All Counts  : n=   4, f=   4, b=   4                    
#     get      verify the tie counts (all)          yDLST_greybox         "ties_count"    , 0                                           s_equal     TIES Counts      : n=   2, f=   2, b=   2                    
#     get      verify the tie counts (head)         yDLST_greybox         "link_tie_count",x_head                                       s_equal     LINK Tie Counts  : nup=   0, fup=   0, ndn=   1, fdn=   1    
#     get      verify the tie counts (tail)         yDLST_greybox         "link_tie_count",x_tail                                       s_equal     LINK Tie Counts  : nup=   1, fup=   1, ndn=   1, fdn=   1    
#     get      verify the tie counts (save)         yDLST_greybox         "link_tie_count",x_save                                       s_equal     LINK Tie Counts  : nup=   0, fup=   0, ndn=   0, fdn=   0    
#     get      verify the tie counts (more)         yDLST_greybox         "link_tie_count",x_more                                       s_equal     LINK Tie Counts  : nup=   1, fup=   1, ndn=   0, fdn=   0    
#
#   COND       run through ties list                                                                                                                                                                                 
#     exec     get the head                         yDLST_ties            HEAD                                                          p_equal     x_tie1                                                       
#     exec     get next                             yDLST_ties            NEXT                                                          p_equal     x_tie2                                                       
#     exec     get next                             yDLST_ties            NEXT                                                          p_equal     NULL                                                         
#
#   COND       add a tie between head and more                                                                                                                                                                       
#     exec     add a tie                            yDLST_tie             x_head, x_more, x_tie3                                        i_equal     0                                                            
#     get      verify the tie counts (all-all)      yDLST_greybox         "ties_all"      , 0                                           s_equal     TIES All Counts  : n=   5, f=   5, b=   5                    
#     get      verify the tie counts (all)          yDLST_greybox         "ties_count"    , 0                                           s_equal     TIES Counts      : n=   3, f=   3, b=   3                    
#     get      verify the tie counts (head)         yDLST_greybox         "link_tie_count",x_head                                       s_equal     LINK Tie Counts  : nup=   0, fup=   0, ndn=   2, fdn=   2    
#     get      verify the tie counts (tail)         yDLST_greybox         "link_tie_count",x_tail                                       s_equal     LINK Tie Counts  : nup=   1, fup=   1, ndn=   1, fdn=   1    
#     get      verify the tie counts (save)         yDLST_greybox         "link_tie_count",x_save                                       s_equal     LINK Tie Counts  : nup=   0, fup=   0, ndn=   0, fdn=   0    
#     get      verify the tie counts (more)         yDLST_greybox         "link_tie_count",x_more                                       s_equal     LINK Tie Counts  : nup=   2, fup=   2, ndn=   0, fdn=   0    
#
#   COND       add a tie between head and save                                                                                                                                                                       
#     exec     add a tie                            yDLST_tie             x_head, x_save, x_tie4                                        i_equal     0                                                            
#     get      verify the tie counts (all-all)      yDLST_greybox         "ties_all"      , 0                                           s_equal     TIES All Counts  : n=   7, f=   7, b=   7                    
#     get      verify the tie counts (all)          yDLST_greybox         "ties_count"    , 0                                           s_equal     TIES Counts      : n=   4, f=   4, b=   4                    
#     get      verify the tie counts (head)         yDLST_greybox         "link_tie_count",x_head                                       s_equal     LINK Tie Counts  : nup=   0, fup=   0, ndn=   3, fdn=   3    
#     get      verify the tie counts (tail)         yDLST_greybox         "link_tie_count",x_tail                                       s_equal     LINK Tie Counts  : nup=   1, fup=   1, ndn=   1, fdn=   1    
#     get      verify the tie counts (save)         yDLST_greybox         "link_tie_count",x_save                                       s_equal     LINK Tie Counts  : nup=   1, fup=   1, ndn=   0, fdn=   0    
#     get      verify the tie counts (more)         yDLST_greybox         "link_tie_count",x_more                                       s_equal     LINK Tie Counts  : nup=   2, fup=   2, ndn=   0, fdn=   0    
#
#   COND       try to add anther tie between head and tail                                                                                                                                                           
#     exec     add a tie                            yDLST_tie             x_head, x_tail, x_tie5                                        i_not       0                                                            
#     get      verify the tie counts (all-all)      yDLST_greybox         "ties_all"      , 0                                           s_equal     TIES All Counts  : n=   7, f=   7, b=   7                    
#     get      verify the tie counts (all)          yDLST_greybox         "ties_count"    , 0                                           s_equal     TIES Counts      : n=   4, f=   4, b=   4                    
#     get      verify the tie counts (head)         yDLST_greybox         "link_tie_count",x_head                                       s_equal     LINK Tie Counts  : nup=   0, fup=   0, ndn=   3, fdn=   3    
#     get      verify the tie counts (tail)         yDLST_greybox         "link_tie_count",x_tail                                       s_equal     LINK Tie Counts  : nup=   1, fup=   1, ndn=   1, fdn=   1    
#     get      verify the tie counts (save)         yDLST_greybox         "link_tie_count",x_save                                       s_equal     LINK Tie Counts  : nup=   1, fup=   1, ndn=   0, fdn=   0    
#     get      verify the tie counts (more)         yDLST_greybox         "link_tie_count",x_more                                       s_equal     LINK Tie Counts  : nup=   2, fup=   2, ndn=   0, fdn=   0    
#
#   COND       run through ties list                                                                                                                                                                                 
#     exec     get the head                         yDLST_ties            HEAD                                                          p_equal     x_tie1                                                       
#     exec     get next                             yDLST_ties            NEXT                                                          p_equal     x_tie2                                                       
#     exec     get next                             yDLST_ties            NEXT                                                          p_equal     x_tie3                                                       
#     exec     get next                             yDLST_ties            NEXT                                                          p_equal     x_tie4                                                       
#     exec     get next                             yDLST_ties            NEXT                                                          p_equal     NULL                                                         
#
#   COND       add a tie between save and more                                                                                                                                                                       
#     exec     add a tie                            yDLST_tie             x_save, x_more, x_tie5                                        i_equal     0                                                            
#     get      verify the tie counts (all-all)      yDLST_greybox         "ties_all"      , 0                                           s_equal     TIES All Counts  : n=   7, f=   7, b=   7                    
#     get      verify the tie counts (all)          yDLST_greybox         "ties_count"    , 0                                           s_equal     TIES Counts      : n=   5, f=   5, b=   5                    
#     get      verify the tie counts (head)         yDLST_greybox         "link_tie_count",x_head                                       s_equal     LINK Tie Counts  : nup=   0, fup=   0, ndn=   3, fdn=   3    
#     get      verify the tie counts (tail)         yDLST_greybox         "link_tie_count",x_tail                                       s_equal     LINK Tie Counts  : nup=   1, fup=   1, ndn=   1, fdn=   1    
#     get      verify the tie counts (save)         yDLST_greybox         "link_tie_count",x_save                                       s_equal     LINK Tie Counts  : nup=   1, fup=   1, ndn=   1, fdn=   1    
#     get      verify the tie counts (more)         yDLST_greybox         "link_tie_count",x_more                                       s_equal     LINK Tie Counts  : nup=   3, fup=   3, ndn=   0, fdn=   0    
#
#   COND       remove the tie between head and tail                                                                                                                                                                  
#     exec     remove a tie                         yDLST_untie           x_head, x_tail                                                i_equal     0                                                            
#     get      verify the tie counts (all-all)      yDLST_greybox         "ties_all"      , 0                                           s_equal     TIES All Counts  : n=   7, f=   7, b=   7                    
#     get      verify the tie counts (all)          yDLST_greybox         "ties_count"    , 0                                           s_equal     TIES Counts      : n=   4, f=   4, b=   4                    
#     get      verify the tie counts (head)         yDLST_greybox         "link_tie_count",x_head                                       s_equal     LINK Tie Counts  : nup=   0, fup=   0, ndn=   2, fdn=   2    
#     get      verify the tie counts (tail)         yDLST_greybox         "link_tie_count",x_tail                                       s_equal     LINK Tie Counts  : nup=   0, fup=   0, ndn=   1, fdn=   1    
#     get      verify the tie counts (save)         yDLST_greybox         "link_tie_count",x_save                                       s_equal     LINK Tie Counts  : nup=   1, fup=   1, ndn=   1, fdn=   1    
#     get      verify the tie counts (more)         yDLST_greybox         "link_tie_count",x_more                                       s_equal     LINK Tie Counts  : nup=   3, fup=   3, ndn=   0, fdn=   0    
#
#   COND       remove the tie between head and more                                                                                                                                                                  
#     exec     remove a tie                         yDLST_untie           x_head, x_more                                                i_equal     0                                                            
#     get      verify the tie counts (all-all)      yDLST_greybox         "ties_all"      , 0                                           s_equal     TIES All Counts  : n=   6, f=   6, b=   6                    
#     get      verify the tie counts (all)          yDLST_greybox         "ties_count"    , 0                                           s_equal     TIES Counts      : n=   3, f=   3, b=   3                    
#     get      verify the tie counts (head)         yDLST_greybox         "link_tie_count",x_head                                       s_equal     LINK Tie Counts  : nup=   0, fup=   0, ndn=   1, fdn=   1    
#     get      verify the tie counts (tail)         yDLST_greybox         "link_tie_count",x_tail                                       s_equal     LINK Tie Counts  : nup=   0, fup=   0, ndn=   1, fdn=   1    
#     get      verify the tie counts (save)         yDLST_greybox         "link_tie_count",x_save                                       s_equal     LINK Tie Counts  : nup=   1, fup=   1, ndn=   1, fdn=   1    
#     get      verify the tie counts (more)         yDLST_greybox         "link_tie_count",x_more                                       s_equal     LINK Tie Counts  : nup=   2, fup=   2, ndn=   0, fdn=   0    
#
#   COND       remove the tie between head and save                                                                                                                                                                  
#     exec     remove a tie                         yDLST_untie           x_head, x_save                                                i_equal     0                                                            
#     get      verify the tie counts (all-all)      yDLST_greybox         "ties_all"      , 0                                           s_equal     TIES All Counts  : n=   5, f=   5, b=   5                    
#     get      verify the tie counts (all)          yDLST_greybox         "ties_count"    , 0                                           s_equal     TIES Counts      : n=   2, f=   2, b=   2                    
#     get      verify the tie counts (head)         yDLST_greybox         "link_tie_count",x_head                                       s_equal     LINK Tie Counts  : nup=   0, fup=   0, ndn=   0, fdn=   0    
#     get      verify the tie counts (tail)         yDLST_greybox         "link_tie_count",x_tail                                       s_equal     LINK Tie Counts  : nup=   0, fup=   0, ndn=   1, fdn=   1    
#     get      verify the tie counts (save)         yDLST_greybox         "link_tie_count",x_save                                       s_equal     LINK Tie Counts  : nup=   0, fup=   0, ndn=   1, fdn=   1    
#     get      verify the tie counts (more)         yDLST_greybox         "link_tie_count",x_more                                       s_equal     LINK Tie Counts  : nup=   2, fup=   2, ndn=   0, fdn=   0    
#
#   COND       remove the tie between tail and more                                                                                                                                                                  
#     exec     remove a tie                         yDLST_untie           x_tail, x_more                                                i_equal     0                                                            
#     get      verify the tie counts (all-all)      yDLST_greybox         "ties_all"      , 0                                           s_equal     TIES All Counts  : n=   3, f=   3, b=   3                    
#     get      verify the tie counts (all)          yDLST_greybox         "ties_count"    , 0                                           s_equal     TIES Counts      : n=   1, f=   1, b=   1                    
#     get      verify the tie counts (head)         yDLST_greybox         "link_tie_count",x_head                                       s_equal     LINK Tie Counts  : nup=   0, fup=   0, ndn=   0, fdn=   0    
#     get      verify the tie counts (tail)         yDLST_greybox         "link_tie_count",x_tail                                       s_equal     LINK Tie Counts  : nup=   0, fup=   0, ndn=   0, fdn=   0    
#     get      verify the tie counts (save)         yDLST_greybox         "link_tie_count",x_save                                       s_equal     LINK Tie Counts  : nup=   0, fup=   0, ndn=   1, fdn=   1    
#     get      verify the tie counts (more)         yDLST_greybox         "link_tie_count",x_more                                       s_equal     LINK Tie Counts  : nup=   1, fup=   1, ndn=   0, fdn=   0    
#
#   COND       remove the tie between save and more                                                                                                                                                                  
#     exec     remove a tie                         yDLST_untie           x_save, x_more                                                i_equal     0                                                            
#     get      verify the tie counts (all-all)      yDLST_greybox         "ties_all"      , 0                                           s_equal     TIES All Counts  : n=   0, f=   0, b=   0                    
#     get      verify the tie counts (all)          yDLST_greybox         "ties_count"    , 0                                           s_equal     TIES Counts      : n=   0, f=   0, b=   0                    
#     get      verify the tie counts (head)         yDLST_greybox         "link_tie_count",x_head                                       s_equal     LINK Tie Counts  : nup=   0, fup=   0, ndn=   0, fdn=   0    
#     get      verify the tie counts (tail)         yDLST_greybox         "link_tie_count",x_tail                                       s_equal     LINK Tie Counts  : nup=   0, fup=   0, ndn=   0, fdn=   0    
#     get      verify the tie counts (save)         yDLST_greybox         "link_tie_count",x_save                                       s_equal     LINK Tie Counts  : nup=   0, fup=   0, ndn=   0, fdn=   0    
#     get      verify the tie counts (more)         yDLST_greybox         "link_tie_count",x_more                                       s_equal     LINK Tie Counts  : nup=   0, fup=   0, ndn=   0, fdn=   0    
#
#   COND       add all the ties back quickly                                                                                                                                                                         
#     exec     add a tie                            yDLST_tie             x_head, x_tail, x_tie1                                        i_equal     0                                                            
#     exec     add a tie                            yDLST_tie             x_tail, x_more, x_tie2                                        i_equal     0                                                            
#     exec     add a tie                            yDLST_tie             x_head, x_more, x_tie3                                        i_equal     0                                                            
#     exec     add a tie                            yDLST_tie             x_head, x_save, x_tie4                                        i_equal     0                                                            
#     exec     add a tie                            yDLST_tie             x_save, x_more, x_tie5                                        i_equal     0                                                            
#     get      verify the tie counts (all-all)      yDLST_greybox         "ties_all"      , 0                                           s_equal     TIES All Counts  : n=   7, f=   7, b=   7                    
#     get      verify the tie counts (all)          yDLST_greybox         "ties_count"    , 0                                           s_equal     TIES Counts      : n=   5, f=   5, b=   5                    
#     get      verify the tie counts (head)         yDLST_greybox         "link_tie_count",x_head                                       s_equal     LINK Tie Counts  : nup=   0, fup=   0, ndn=   3, fdn=   3    
#     get      verify the tie counts (tail)         yDLST_greybox         "link_tie_count",x_tail                                       s_equal     LINK Tie Counts  : nup=   1, fup=   1, ndn=   1, fdn=   1    
#     get      verify the tie counts (save)         yDLST_greybox         "link_tie_count",x_save                                       s_equal     LINK Tie Counts  : nup=   1, fup=   1, ndn=   1, fdn=   1    
#     get      verify the tie counts (more)         yDLST_greybox         "link_tie_count",x_more                                       s_equal     LINK Tie Counts  : nup=   3, fup=   3, ndn=   0, fdn=   0    
#
#   COND       run through ties list                                                                                                                                                                                 
#     exec     get the head                         yDLST_ties            HEAD                                                          p_equal     x_tie1                                                       
#     exec     get next                             yDLST_ties            NEXT                                                          p_equal     x_tie2                                                       
#     exec     get next                             yDLST_ties            NEXT                                                          p_equal     x_tie3                                                       
#     exec     get next                             yDLST_ties            NEXT                                                          p_equal     x_tie4                                                       
#     exec     get next                             yDLST_ties            NEXT                                                          p_equal     x_tie5                                                       
#     exec     get next                             yDLST_ties            NEXT                                                          p_equal     NULL                                                         
#
#   COND       get a specific entry in the ties list                                                                                                                                                                 
#     exec     get the middle                       yDLST_ties            2                                                             p_equal     x_tie3                                                       
#     exec     get the second                       yDLST_ties            1                                                             p_equal     x_tie2                                                       
#     exec     get the last                         yDLST_ties            4                                                             p_equal     x_tie5                                                       
#     exec     get beyond the end                   yDLST_ties            5                                                             p_equal     NULL                                                         
#     exec     get the first                        yDLST_ties            0                                                             p_equal     x_tie1                                                       
#
#   COND       run through the head downs                                                                                                                                                                            
#     exec     get the head                         yDLST_downs           x_head, HEAD                                                  p_equal     x_payt                                                       
#     exec     get next                             yDLST_downs           x_head, NEXT                                                  p_equal     x_paym                                                       
#     exec     get next                             yDLST_downs           x_head, NEXT                                                  p_equal     x_pays                                                       
#     exec     get next                             yDLST_downs           x_head, NEXT                                                  p_equal     NULL                                                         
#     exec     get first                            yDLST_downs           x_head, 0                                                     p_equal     x_payt                                                       
#     exec     get last                             yDLST_downs           x_head, 2                                                     p_equal     x_pays                                                       
#     exec     get beyond last                      yDLST_downs           x_head, 3                                                     p_equal     NULL                                                         
#
#   COND       run through the head ups                                                                                                                                                                              
#     exec     get the head                         yDLST_ups             x_head, HEAD                                                  p_equal     NULL                                                         
#     exec     get next                             yDLST_ups             x_head, NEXT                                                  p_equal     NULL                                                         
#     exec     get first                            yDLST_ups             x_head, 0                                                     p_equal     NULL                                                         
#
#   COND       run through the more ups                                                                                                                                                                              
#     exec     get the head                         yDLST_ups             x_more, HEAD                                                  p_equal     x_payt                                                       
#     exec     get next                             yDLST_ups             x_more, NEXT                                                  p_equal     x_payh                                                       
#     exec     get next                             yDLST_ups             x_more, NEXT                                                  p_equal     x_pays                                                       
#     exec     get next                             yDLST_ups             x_more, NEXT                                                  p_equal     NULL                                                         
#     exec     get first                            yDLST_ups             x_more, 0                                                     p_equal     x_payt                                                       
#     exec     get last                             yDLST_ups             x_more, 2                                                     p_equal     x_pays                                                       
#     exec     get beyond last                      yDLST_ups             x_more, 3                                                     p_equal     NULL                                                         
#
#   COND       run through the more downs                                                                                                                                                                            
#     exec     get the head                         yDLST_downs           x_more, HEAD                                                  p_equal     NULL                                                         
#     exec     get next                             yDLST_downs           x_more, NEXT                                                  p_equal     NULL                                                         
#     exec     get first                            yDLST_downs           x_more, 0                                                     p_equal     NULL                                                         
#
#
#
#
#   COND       teardown library (should destroy all lists/links)                                                                                                                                                     
#     exec     wrapup the library                   yDLST_end                                                                           i_equal     0                                                            
#     get      review the list counts               yDLST_greybox         "list_count",    0                                            s_equal     LIST Counts      : n=   0, f=   0, b=   0                    
#     code     create a custom expect string        sprintf(custom, "LIST End Ints    : n=   0, h=%4d, t=%4d",  -1  ,  -1  );                                                                                        
#     get      verify the list of lists             yDLST_greybox         "list_end_int" , 0                                            c_equal     custom                                                       
#     get      review the count of all links        yDLST_greybox         "all_count",     0                                            s_equal     ALL Counts       : n=   0, f=   0, b=   0                    
#     code     create a custom expect string        sprintf(custom, "ALL End Ints     : n=   0, h=%4d, t=%4d",  -1  ,  -1  );                                                                                        
#     get      verify the list of all links         yDLST_greybox         "all_end_int"  , 0                                            c_equal     custom                                                       
